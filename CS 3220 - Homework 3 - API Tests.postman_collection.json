{
	"info": {
		"_postman_id": "96fff424-a168-4a2f-8e55-d1a53df0f42a",
		"name": "CS 3220 - Homework 3 - API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34830430"
	},
	"item": [
		{
			"name": "Get All Teams",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "Tests if the API can successfully retrieve all teams."
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/teams",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"teams"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Team by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "(Assuming a team with ID 1 exists) Tests if the API can retrieve a team by its ID."
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/teams/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"teams",
						"1"
					]
				}
			},
			"response": [
				{
					"name": "Positive Test",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "(Assuming a team with ID 1 exists) Tests if the API can retrieve a team by its ID."
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/teams/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"teams",
								"1"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"name": "Negative Test",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "(Assuming no team with ID 999 exists)\n Tests if the API handles a non-existing team ID correctly by returning a 404 error."
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/teams/999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"teams",
								"999"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Create a New Team",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "Tests if the API can successfully create a new team."
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"gender\": \"Male\",\r\n  \"color\": \"Blue\",\r\n  \"minAge\": 10,\r\n  \"maxAge\": 15\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/teams",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"teams"
					]
				}
			},
			"response": [
				{
					"name": "Positive Test",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "Tests if the API can successfully create a new team."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"gender\": \"Male\",\r\n  \"color\": \"Blue\",\r\n  \"minAge\": 5,\r\n  \"maxAge\": 11\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/teams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"teams"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"name": "Negative Test",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "Tests if the API returns an error when required fields are missing."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"gender\": \"Male\",\r\n  \"uniformColor\": \"Blue\"\r\n  // Missing minAge and maxAge\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/teams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"teams"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Add Player to Team",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "Assuming player with ID 1 is already assigned to team ID 1, this tests if the API correctly prevents adding the player again."
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Tuan Khai Tran\",\r\n    \"gender\": \"Male\",\r\n    \"birthYear\": 2017\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/teams/3/players/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"teams",
						"3",
						"players",
						"3"
					]
				}
			},
			"response": [
				{
					"name": "Player Already In Team",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "This tests if the API handles cases where the player ID does not exist."
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/teams/1/players/999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"teams",
								"1",
								"players",
								"999"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"name": "Non-existing Team",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "This tests if the API handles cases where the team ID does not exist."
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/teams/999/players/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"teams",
								"999",
								"players",
								"3"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"name": "Non-existing Player",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "Assuming player with ID 1 is already assigned to team ID 1, this tests if the API correctly prevents adding the player again."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/teams/1/players/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"teams",
								"1",
								"players",
								"3"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}